#include "DxLib.h"

/*概要*/
//この『Grammerシリーズ』ではDxLibの基礎的な使い方を学習しつつ、C/C++の文法のおさらいをします。
//ただし、このシリーズでおさらいするC++の文法はゲーム作りで最低限必要、というレベルです。抜けが出ます。
//また、初学者向けの解説のような事はしていません。使い方の例が書いてある程度です。
//分からない部分は自ら能動的に調べて下さい。

/*今回の要素*/
//・DxLibでの画像表示
// 　‐　ダブルバッファリング
// 　‐　円の描き方
// 　‐　縁の描き方
// 　‐　画像の表示
//・変数
//・Roop文


/*Dxlibのエントリーポイント*/
//『エントリーポイント』とはプログラムの開始地点の事です。
//DxLibの場合はWinMainからスタートします。引数や返り値は使うことは無いので、気にしなくていいです。
int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_  HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ int nShowCmd)
{
	/*Dxlibの設定*/
	//Dxlibはデフォルトだとフルスクリーンです。作業しにくいので、ウィンドウモードに変えます。
	//画面サイズや解像度とモードの変更をしたあと初期化することで変更できます。
	
	//画面サイズと解像度
	SetGraphMode(1280, 720, 32);
	//Windowモードに変更
	ChangeWindowMode(true);
	//Dxlibそのものの初期化
	if (DxLib_Init() == -1) { return -1; }


	/*ダブルバッファリング*/
	//ダブルバッファリングとは画像の描画方式のことです。
	//画面に映る画像を切り替える際に、1からロードするとチラツキが発生します。
	//そのため、画面の表に今見えている画像を表示している間に画面裏に次の画像を用意することで、
	//ロード時間を短縮してチラツキを抑制します。これがダブルバッファリングです。
	// Dxlibでは
	//0.ダブルバッファリングモードに変更
	//1.裏画面をクリアする
	//2.裏画面に書き込む
	//3.表画面に反映する(表に写ってたものは消える)
	//4.1~3を繰り返す。
	// の形でダブルバッファリングを実現しています。

	//ダブルバッファリングモードに変更
	SetDrawScreen(DX_SCREEN_BACK);


	/*変数*/
	//計算などをする際に一時的値を保存するために使う。
	//どのような数字を扱うかによって型が変わる。
	//基本的には整数はint,実数はfloatと考えるとよい。
	int drawHandle;//整数型
	float cout2;//実数


	/*画像の読み込み*/
	//メモリに読み込み、その位置を入れている。
	//こういう物を画像ハンドルと言う。
	drawHandle = LoadGraph("Chara.png");


	/*ゲームループ部*/
	//一般的なゲームは単位時間毎に何度も何度も表示を繰り返す事で表現されます。
	//これをゲームループと言います。これが通常のプログラミングとの大きな違いです。
	//ユーザが何もしなくてもリアルタイムで表示が変化するのがゲームなので、絶対に必要な機能となります。
	//特に何かアクションが無ければ無限にループする必要があるため、条件にはTRUEを入れて無限ループを作成します。
	while (TRUE)
	{

		//裏画面の初期化(ダブルバッファリング1)
		ClearDrawScreen();

		/*ゲーム処理部(ダブルバッファリング2)*/

		//円の表示
		DrawCircle(100,100,20,200,1,1);//(x座標,y座標,半径,色,塗り潰すかどうか,表示するか)

		//線の表示
		DrawLine(200,200,300,300,200,1);//(始点x,始点y,終点x,終点y,色,表示するか)

		//画像の表示
		DrawGraph(400,400,drawHandle,1);//(x座標,y座標,読み込んだ画像のハンドル,表示するか)


		//裏画面を表へ(ダブルバッファリング3)
		ScreenFlip();


		/*リフレッシュ処理(-1ならエラー)*/
		if (ProcessMessage() < 0) { break; }

	}

	/*終了処理*/
	DxLib_End();//Dxlib終了処理
	return 0;//終了 
}